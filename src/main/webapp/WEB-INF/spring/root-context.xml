<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring 
	http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- root-context.xml : 스프링 설정 파일 스프링 설정? view와 관련되지 않은 객체를 정의 Service(기능), 
		DAO(Repository : 저장소), DB등 비즈니스 로직과 관련된 설정 BasicDataSource dataSource = new 
		BasicDataSource(); dataSource.setDriverClassName() = "oracle.jdbc.driver.OracleDriver"; -->
	<!-- dataSource : 데이터베이스와 관련된 정보를 설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<!-- 멤버 변수 세팅 -->
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@112.220.114.130:1521:xe" />
		<property name="username" value="team2_202206F" />
		<property name="password" value="java" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation"
			value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- AWS Bean 주입. -->
<!-- 	<bean id="s3Config" -->
<!-- 		  class="kr.or.ddit.aws.S3Config"></bean> -->

<!-- 	<bean id="myComponent" -->
<!-- 		class="kr.or.ddit.aws.MyComponent"></bean> -->
	<!-- AWS Bean 주입 끝. -->

	<!-- Filter Bean 설정 시작. -->
		<bean id="logFilter"
			  class="kr.or.ddit.filter.LogFilter"></bean>

	<!-- Filter Bean 설정 끝. -->

	<!-- 애너테이션 기반의 트랜잭션 제어를 활성화함 -->
	<tx:annotation-driven />
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.mapper" />
	</bean>


	<!-- //////////////AOP 관련 설정 시작///////////////// -->
	<!-- AOP 활성화 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- kr.or.ddit.aop 패키지를 스캔 대상으로 등록 -->
	
	<!-- kr.or.ddit.aws 패키지를 컴포넌트 스캔 대상으로 등록 -->
	<context:component-scan
		base-package="kr.or.ddit.aws"></context:component-scan>

	<!-- kr.or.ddit.filter 패키지를 컴포넌트 스캔 대상으로 등록 -->
	<context:component-scan
			base-package="kr.or.ddit.filter"></context:component-scan>

</beans>
