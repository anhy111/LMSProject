<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.MemberMapper">

	<resultMap type="member" id="memberMap">
		<result property="memNo" column="MEM_NO" />
		<result property="memPass" column="MEM_PASS" />
		<result property="memTel" column="MEM_TEL" /> 

		<collection property="memberAuthList" resultMap="authMap"></collection> 
	</resultMap>

	<resultMap type="memberAuth" id="authMap">
		<result property="memNo" column="MEM_NO" />
		<result property="auth" column="AUTH" />
	</resultMap>

	<select id="read" parameterType="int" resultMap="memberMap">
		SELECT 	A.MEM_NO
				, A.MEM_TEL
				, A.MEM_PASS
				, AUTH.AUTH
		FROM   MEMBER A LEFT OUTER JOIN MEMBER_AUTH AUTH ON(A.MEM_NO = AUTH.MEM_NO)
		WHERE  A.MEM_NO = #{memNo} <!-- 수정하기 -->
	</select>
	
	<select id="readStudent" parameterType="int" resultType="student">
		SELECT 	S.STU_NO
				, S.DEP_CD
				, S.STU_YR
				, S.STU_SEM
				, S.STU_NM
				, S.STU_NME
				, S.STU_TEL
				, S.STU_ZIP
				, S.STU_ADDR1
				, S.STU_ADDR2
				, S.STU_REG
				, trim((SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = S.STU_BANK_CD AND S.STU_NO = #{memNo})) AS STU_BANK_CD
				, S.STU_DEPO
				, S.STU_ACT
				, S.STU_PIC
				, S.STU_BIR
				, S.PRO_NO
				, (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = S.STU_RGB AND S.STU_NO = #{memNo}) STU_RGB
				, D.DEP_CD
				, D.DEP_NM
				, C.COL_CD
				, C.COL_NM
				, E.EMP_NM
		FROM STUDENT S, DEPARTMENT D, COLLEGE C, EMPLOYEE E
		WHERE S.DEP_CD = D.DEP_CD
		AND D.COL_CD = C.COL_CD
		AND S.PRO_NO = E.EMP_NO
		AND S.STU_NO = #{memNo} 
	</select>
	
	<select id="readEmployee" parameterType="int" resultType="employee">
		SELECT  E.EMP_NO
		        , E.EMP_NM
		        , E.EMP_NME
		        , E.EMP_TEL
		        , E.EMP_TEL2
		        , E.EMP_ZIP
		        , E.EMP_ADDR1
		        , E.EMP_ADDR2
		        , trim((SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = E.EMP_BANK_CD AND E.EMP_NO = #{memNo})) AS EMP_BANK_CD
		        , E.EMP_DEPO
		        , E.EMP_ACT
		        , E.EMP_PIC
		        , E.EMP_JOIN
		        , E.EMP_RET
		        , E.EMP_BIR
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C, EMPLOYEE E WHERE C.COMD_CD = E.EMP_DIV AND E.EMP_NO = #{memNo}) AS EMP_DIV
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C, EMPLOYEE E WHERE C.COMD_CD = E.EMP_POS AND E.EMP_NO = #{memNo}) AS EMP_POS
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C, PROFESSOR P WHERE C.COMD_CD = P.PRO_POS AND P.PRO_NO = #{memNo}) AS PRO_POS
		        , D.DEP_CD
		        , D.DEP_NM
		        , C.COL_CD
		        , C.COL_NM
		FROM DEPARTMENT D, COLLEGE C, PROFESSOR P, EMPLOYEE E
		WHERE D.COL_CD = C.COL_CD(+)
		AND P.DEP_CD = D.DEP_CD(+)
		AND E.EMP_NO = P.PRO_NO(+)
		AND E.EMP_NO = #{memNo}
	</select>
	
	<select id="readManager" parameterType="int" resultType="manager">
		SELECT 	EMP_NO
		        ,(SELECT  C.COMD_NM FROM COMMON_DETAIL C, EMPLOYEE E WHERE C.COMD_CD = E.EMP_DIV AND E.EMP_NO = #{memNo}) AS EMP_DIV
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C, EMPLOYEE E WHERE C.COMD_CD = E.EMP_POS AND E.EMP_NO = #{memNo}) AS EMP_POS
		FROM EMPLOYEE
		WHERE EMP_NO = #{memNo}
	</select>
	
	<select id="readProfessor" parameterType="int" resultType="professor">
		SELECT 	PRO_NO
				, DEP_CD
				, (SELECT  C.COMD_NM FROM COMMON_DETAIL C, PROFESSOR P WHERE C.COMD_CD = P.PRO_POS AND P.PRO_NO = #{memNo}) AS PRO_POS
		FROM PROFESSOR
		WHERE PRO_NO = #{memNo}
	</select>
	
	<select id="searchId" parameterType="map" resultType="String">
		SELECT MEM_NO 
		FROM MEMBER LEFT OUTER JOIN STUDENT ON(MEM_NO = STU_NO) 
		WHERE STU_NM = #{memNm}
		AND STU_BIR = #{memBir}
		AND STU_TEL = #{memTel}
	</select>
	
	<select id="changePw" parameterType="map"> 
		UPDATE MEMBER
		SET MEM_PASS = #{memPass}
		WHERE MEM_TEL = #{memTel}
		AND MEM_NO = #{memNo}
	</select>
	
	<update id="stuUpdate" parameterType="student">
		UPDATE STUDENT
		SET	 STU_ZIP = #{stuZip}
			, STU_ADDR1 = #{stuAddr1}
			, STU_ADDR2 = #{stuAddr2}
			, STU_BANK_CD = #{stuBankCd}
			, STU_ACT = #{stuAct}
		WHERE STU_NO = #{stuNo}
	</update>
	
	<update id="empUpdate" parameterType="employee"> 
		UPDATE EMPLOYEE
		SET	 EMP_ZIP = #{empZip}
			, EMP_ADDR1 = #{empAddr1}
			, EMP_ADDR2 = #{empAddr2}
			, EMP_BANK_CD = #{empBankCd}
			, EMP_ACT = #{empAct}
			, EMP_TEL2 = #{empTel2}
		WHERE EMP_NO = #{empNo}
	</update>
	
	<update id="updateStuPw" parameterType="map">
		UPDATE MEMBER
		SET MEM_PASS = #{newPw}
		WHERE MEM_PASS = #{oldPw}
		AND MEM_NO = #{memNo}
	</update>

	<!--학생이 받은 장학금 내역  -->
	<select id="mySclList" parameterType="int" resultType="sclHistory">
		SELECT   SH.SCLH_CD 
		        , SH.SCL_CD 
		        , SH.STU_NO 
		        , SH.SCLH_YR 
		        , SH.SCLH_SEM 
		        , SH.SCLH_DT 
		        , SH.SCLH_YN 
		        , SH.SCLH_PAY_YN 
		        , SH.PRO_NO 
		        , SH.SCLH_AMT 
		        , SH.SCLH_RCMD 
		        , (SELECT S.SCL_NM FROM SCHOLARSHIP S WHERE S.SCL_CD = SH.SCL_CD) SCL_NM
		        , P.PRO_NO
		        , NVL(E.EMP_NM, ' ') EMP_NM 
		FROM    EMPLOYEE E, PROFESSOR P, SCL_HISTORY SH
		WHERE E.EMP_NO(+) = P.PRO_NO
		AND P.PRO_NO(+) = SH.PRO_NO
		AND (SH.SCLH_YN = 'AP001' OR SH.SCLH_YN = 'AP005')
		AND SH.STU_NO = #{memNo}
	</select>
	
	<!-- 마이페이지 들어갈 때 비번검사 -->
	<select id="inMypage" parameterType="member" resultType="int"> 
		SELECT	count(*)
		FROM MEMBER
		WHERE MEM_NO = #{memNo}
		AND MEM_PASS = #{memPass}
	</select>

</mapper>







