<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.ManageMapper">
	
	<select id="studentList" parameterType="int" resultType="student"> 
		WITH T AS(
			SELECT 	ROW_NUMBER() OVER(ORDER BY S.STU_NO)-1 ROWNO
			        , S.STU_NO
			        , S.STU_YR
			        , S.STU_SEM
			        , S.STU_NM
			        , S.STU_NME
			        , S.STU_TEL
			        , S.STU_ZIP
			        , S.STU_ADDR1
			        , S.STU_ADDR2
			        , S.STU_REG
			        , S.STU_BANK_CD
			        , S.STU_DEPO
			        , S.STU_ACT
			        , S.STU_PIC
			        , S.STU_BIR
			        , S.PRO_NO
			        , D.DEP_CD
			        , D.DEP_NM
			        , C.COL_CD
			        , C.COL_NM
			        , (SELECT E.EMP_NM FROM EMPLOYEE E WHERE E.EMP_NO = S.PRO_NO) EMP_NM
			FROM COLLEGE C, DEPARTMENT D, STUDENT S
			WHERE D.COL_CD = C.COL_CD
			AND S.DEP_CD = D.DEP_CD
			)
			SELECT *
			FROM T
			WHERE ROWNO
			BETWEEN (10 * (#{viewPage}-1)) AND ((10*#{viewPage})-1)
			ORDER BY ROWNO ASC
	</select>
	
	<select id="stuSearch" parameterType="map" resultType="student">
		SELECT 	S.STU_NO
				, S.DEP_CD
				, S.STU_YR
				, S.STU_SEM
				, S.STU_NM
				, S.STU_NME
				, S.STU_TEL
				, S.STU_ZIP
				, S.STU_ADDR1
				, S.STU_ADDR2
				, S.STU_REG
				, S.STU_BANK_CD
				, S.STU_DEPO
				, S.STU_ACT
				, S.STU_PIC
				, S.STU_BIR
				, S.PRO_NO
				, D.DEP_CD
				, D.DEP_NM
				, C.COL_CD
				, C.COL_NM
				, E.EMP_NM
		FROM STUDENT S, DEPARTMENT D, COLLEGE C, EMPLOYEE E
		WHERE S.DEP_CD = D.DEP_CD
		AND D.COL_CD = C.COL_CD
		AND S.PRO_NO = E.EMP_NO
        <if test="colCd > 0">
			AND C.COL_CD = #{colCd}
		</if>
        <if test="depNm != null and depNm != ''">
			AND D.DEP_NM LIKE '%' || #{depNm} || '%'
		</if>
		<if test="stuNo > 0">
			AND S.STU_NO LIKE '%' || #{stuNo} || '%'
		</if>
		<if test="stuNm != null and stuNm != ''">
			AND S.STU_NM LIKE '%' || #{sutNm} || '%'
		</if>
	</select>
	
	<select id="detailStu" parameterType="map" resultType="student">
		SELECT 	S.STU_NO
				, S.DEP_CD
				, S.STU_YR
				, S.STU_SEM
				, S.STU_NM
				, S.STU_NME
				, S.STU_TEL
				, S.STU_ZIP
				, S.STU_ADDR1
				, S.STU_ADDR2
				, S.STU_REG
				, S.STU_BANK_CD
				, S.STU_DEPO
				, S.STU_ACT
				, S.STU_PIC
				, S.STU_BIR
				, S.PRO_NO
				, D.DEP_CD
				, D.DEP_NM
				, C.COL_CD
				, C.COL_NM
				, E.EMP_NM
				, S.STU_RGB
		FROM STUDENT S, DEPARTMENT D, COLLEGE C, EMPLOYEE E
		WHERE S.DEP_CD = D.DEP_CD
		AND D.COL_CD = C.COL_CD
		AND S.PRO_NO = E.EMP_NO
		AND S.STU_NO = #{detailStu} 
	</select>
	
	<delete id="deleteMemStu" parameterType="map">
		DELETE FROM MEMBER
		WHERE MEM_NO = #{stuNo}
	</delete>
	
	<delete id="deleteStu" parameterType="map" >
		DELETE FROM STUDENT
		WHERE STU_NO = #{stuNo}
	</delete>
	
	<update id="updateStu" parameterType="student">  
		UPDATE STUDENT S
		SET      S.STU_YR = #{stuYr}
		        , S.STU_SEM= #{stuSem}
		        , S.STU_NM= #{stuNm}
		        , S.STU_NME= #{stuNme}
		        , S.STU_TEL= #{stuTel}
		        , S.STU_ZIP= #{stuZip}
		        , S.STU_ADDR1= #{stuAddr1}
		        , S.STU_ADDR2= #{stuAddr2}
		        , S.STU_BANK_CD= #{stuBankCd}
		        , S.STU_DEPO= #{stuDepo}
		        , S.STU_ACT= #{stuAct}
		        <if test="stuPic != null">
		        , S.STU_PIC= #{stuPic}
		        </if>
		        , S.STU_BIR= #{stuBir}
		        , S.DEP_CD = (SELECT DEP_CD FROM DEPARTMENT WHERE DEP_CD=#{depCd})
		WHERE S.STU_NO = #{stuNo}
	</update>
	
	<select id="recordSearch" parameterType="map" resultType="student">  
		SELECT  S.STU_NO
		        , S.STU_NM
		        , D.DEP_NM
		        , R.REC_CD
		        , R.REC_YR
		        , R.REC_SEM
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.RGB_CD) AS RGB_CD
		        , R.REC_PER
		        , R.REC_RSN
		        , R.REC_DT
		        , C.CNSL_TTL
       			, C.CNSL_CON
		        , (SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.REC_YN) AS REC_YN
		        , (SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = C.CNSL_YN) AS CNSL_YN
		        , C.CNSL_RPL
		FROM STUDENT S, DEPARTMENT D, RECORD R, COUNSEL C
		WHERE S.DEP_CD = D.DEP_CD
		AND S.STU_NO = R.STU_NO
		AND R.REC_CD = C.REC_CD
		<if test="rgbCd != null and rgbCd != ''">
			AND R.RGB_CD = #{rgbCd}
		</if>
        <if test="recYn != null and recYn != ''">
			AND R.REC_YN = #{recYn}
		</if>
		<if test="recYr > 0">
			AND R.REC_YR LIKE '%' || #{recYr} || '%'
		</if>
		<if test="recSem != null and recSem != ''">
			AND R.REC_SEM LIKE '%' || #{recSem} || '%'
		</if>
		<if test="stuNm != null and stuNm != ''">
			AND S.STU_NM LIKE '%' || #{sutNm} || '%'
		</if>
	</select>
	
	<select id="recordManage" resultType="student"> 
		SELECT  S.STU_NO
		        ,S.STU_NM
		        ,D.DEP_NM
		        ,R.REC_CD
		        ,R.REC_YR
		        ,R.REC_SEM
		        ,(SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.RGB_CD) AS RGB_CD
		        ,R.REC_PER
		        ,R.REC_RSN
		        ,R.REC_DT
		        ,(SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.REC_YN) AS REC_YN
		FROM STUDENT S, DEPARTMENT D, RECORD R
		WHERE S.DEP_CD = D.DEP_CD
		AND S.STU_NO = R.STU_NO
	</select>
	
	<select id="recordManagePost" parameterType="map" resultType="student" > 
		SELECT  S.STU_NO
		        , S.STU_NM
		        , S.STU_TEL
		        , D.DEP_NM
		        , R.REC_CD
		        , R.REC_YR
		        , R.REC_SEM
		        , (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.RGB_CD) AS RGB_CD
		        , R.REC_PER
		        , R.REC_RSN
		        , R.REC_DT
		        , R.REC_REJ
		        , (SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.REC_YN) AS REC_YN
		        , C.CNSL_TTL
       			, C.CNSL_CON
		        , (SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = R.REC_YN) AS REC_YN
		        , (SELECT C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = C.CNSL_YN) AS CNSL_YN
		        , C.CNSL_RPL
		FROM STUDENT S, DEPARTMENT D, RECORD R, COUNSEL C
		WHERE S.DEP_CD = D.DEP_CD
		AND S.STU_NO = R.STU_NO
		AND R.REC_CD = C.REC_CD
		AND R.REC_CD = #{recCd}
	</select>
	
	<update id="yesOrNo" parameterType="map"> 
		UPDATE RECORD R
		SET R.REC_YN = #{Yn}
			, R.REC_REJ = #{recRej}
		WHERE R.REC_CD = #{recCd}
	</update>
	
	<update id="updateStudentRecord" parameterType="map">
	update student
	set stu_rgb = (select comd_cd from common_detail where comd_nm = #{rgbCd})
	where stu_no = #{stuNo}
	</update>
	
	<select id="createEmpId" resultType="member"> 
		SELECT TO_CHAR (SYSDATE,'YYYY') || '01' || (SELECT TRIM(TO_CHAR(NVL(MAX(SUBSTR(EMP_NO,7)),0) + 1,'000')) FROM EMPLOYEE ) AS MEM_NO
		FROM DUAL
	</select>
	
	<insert id="createMember" parameterType="employee"> 
		INSERT INTO MEMBER(MEM_NO, Mem_Tel, MEM_PASS)
		VALUES (#{empNo}, #{empTel}, #{empPass})
	</insert>
	
	<insert id="createEmployee" parameterType="employee">
		INSERT INTO EMPLOYEE 
            (EMP_NO
            , EMP_NM
            , EMP_NME
            , EMP_TEL
            , EMP_TEL2
            , EMP_ZIP
            , EMP_ADDR1
            , EMP_ADDR2
            , EMP_REG
            , EMP_BANK_CD
            , EMP_DEPO
            , EMP_ACT
            , EMP_PIC
            , EMP_JOIN
            , EMP_BIR
            , EMP_DIV
            , EMP_POS)
		VALUES (#{empNo}
				, #{empNm}
				, #{empNme}
				, #{empTel}
				, #{empTel2}
				, #{empZip}
				, #{empAddr1}
				, #{empAddr2}
				, #{empReg}
				, #{empBankCd}
				, #{empDepo}
				, #{empAct}
				, #{empPic}
				, #{empJoin}
				, #{empBir}
				, #{empDiv}
				, #{empPos})
	</insert>
	
	<insert id="createProfessor" parameterType="employee"> 
		INSERT INTO PROFESSOR(PRO_NO, DEP_CD, PRO_POS)
		VALUES (#{empNo}, #{depCd}, #{proPos})
	</insert>
	
	<select id="employeeList" parameterType="int" resultType="employee"> 
		WITH T AS (
			    SELECT   ROW_NUMBER() OVER(ORDER BY E1.EMP_NO)-1 ROWNO
			            , E1.EMP_NO
			            , E1.EMP_NM
			            , E1.EMP_NME
			            , E1.EMP_TEL
			            , E1.EMP_TEL2
			            , E1.EMP_ZIP
			            , E1.EMP_ADDR1
			            , E1.EMP_ADDR2
			            , (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = E1.EMP_BANK_CD) AS EMP_BANK_CD
			            , E1.EMP_DEPO
			            , E1.EMP_ACT
			            , E1.EMP_PIC
			            , E1.EMP_JOIN
			            , E1.EMP_RET
			            , E1.EMP_BIR
			            , (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = E1.EMP_DIV) AS EMP_DIV
			            , (SELECT  C.COMD_NM FROM COMMON_DETAIL C WHERE C.COMD_CD = E1.EMP_POS) AS EMP_POS
			    FROM EMPLOYEE E1
			    ORDER BY E1.EMP_NO ASC
			) 
			SELECT *
			FROM T
			WHERE T.ROWNO
			BETWEEN (10 * (#{viewPage}-1)) AND ((10*#{viewPage})-1)
			ORDER BY ROWNO ASC
	</select>
	
	<select id="detailEmp" parameterType="map" resultType="employee">
		SELECT  E.EMP_NO
		        , E.EMP_NM
		        , E.EMP_NME
		        , E.EMP_TEL
		        , E.EMP_TEL2
		        , E.EMP_ZIP
		        , E.EMP_ADDR1
		        , E.EMP_ADDR2
		        , E.EMP_BANK_CD
		        , E.EMP_DEPO
		        , E.EMP_ACT
		        , E.EMP_PIC
		        , E.EMP_JOIN
		        , E.EMP_RET
		        , E.EMP_BIR
		        , E.EMP_DIV
		        , E.EMP_POS
		        , P.PRO_POS
		        , D.DEP_CD
		        , D.DEP_NM
		        , C.COL_CD
		        , C.COL_NM
		FROM DEPARTMENT D, COLLEGE C, PROFESSOR P, EMPLOYEE E
		WHERE D.Col_Cd = C.COL_CD(+)
		AND P.Dep_Cd = D.DEP_CD(+)
		AND E.EMP_NO = P.PRO_NO(+)
		AND E.EMP_NO = #{empNo}
	</select>
	
	<delete id="deleteMemEmp" parameterType="map">
		DELETE FROM MEMBER
		WHERE MEM_NO = #{empNo}
	</delete>
	
	<delete id="deleteEmp" parameterType="map"> 
		DELETE FROM EMPLOYEE
		WHERE EMP_NO = #{empNo}
	</delete>
	
	<delete id="deletePro" parameterType="map">  
		DELETE FROM PROFESSOR
		WHERE PRO_NO = #{empNo}
	</delete>
	
	<update id="updateEmp" parameterType="employee"> 
		UPDATE  EMPLOYEE
		SET      EMP_NM = #{empNm}
		        , EMP_NME = #{empNme}
		        , EMP_TEL = #{empTel}
		        , EMP_TEL2 = #{empTel2}
		        , EMP_ZIP = #{empZip}
		        , EMP_ADDR1 = #{empAddr1}
		        , EMP_ADDR2 = #{empAddr2}
		        <if test="empReg != null">
		        , EMP_REG = #{empReg}
		        </if>
		        , EMP_BANK_CD = #{empBankCd}
		        , EMP_DEPO = #{empDepo}
		        , EMP_ACT = #{empAct}
		        <if test="empPic != null">
		        , EMP_PIC = #{empPic}
		        </if>
		        , EMP_JOIN = #{empJoin}
		        <if test="empRet != null">
		        , EMP_RET = #{empRet}
		        </if>
		        , EMP_BIR = #{empBir}
		        , EMP_DIV = #{empDiv}
		        , EMP_POS = #{empPos}
		WHERE EMP_NO = #{empNo}
	</update>
	
	<!-- 강의평가 리스트 -->
	<select id="evaluationList" parameterType="map" resultType="evaluation"> 
		SELECT   L.LECA_CD
		        , L.LEC_HCNT 
		        , A.LECA_NM 
		        , A.PRO_NO 
		        , E.EMP_NM 
		        , TO_CHAR(AVG(V.EVL_SCORE),'0.0') AS EVL_SCORE
		        , A.LECA_CATE 
		        , D.DEP_NM 
		        , C.COL_NM 
		        , A.LECA_YR 
		        , A.LECA_SEM 
		FROM  COLLEGE C, DEPARTMENT D, PROFESSOR P, EMPLOYEE E, SUBJECT U, LECTURE L, LEC_APPLY A, STU_LEC S, EVALUATION V  
		WHERE D.COL_CD = C.COL_CD
		AND D.DEP_CD = P.DEP_CD
		AND P.PRO_NO = E.EMP_NO
		AND U.PRO_NO = P.PRO_NO
		AND L.SUB_CD = U.SUB_CD
		AND L.LECA_CD = A.LECA_CD
		AND L.LECA_CD = S.LECA_CD
		AND S.LECA_CD = V.LECA_CD
		AND V.STU_NO = S.STU_NO
		GROUP BY  L.LECA_CD 
		        , L.LEC_HCNT 
		        , A.LECA_NM 
		        , A.PRO_NO 
		        , E.EMP_NM 
		        , A.LECA_CATE 
		        , D.DEP_NM 
		        , C.COL_NM 
		        , A.LECA_YR 
		        , A.LECA_SEM
	</select>
	
	<select id="evaluationCon" parameterType="map" resultMap="evlMap"> 
		SELECT   L.LECA_CD 
		        , L.LEC_HCNT 
		        , A.LECA_NM 
		        , A.PRO_NO 
		        , E.EMP_NM 
		        , TO_CHAR((SELECT AVG(EVL_SCORE) FROM EVALUATION WHERE LECA_CD = #{lecaCd}),'0.0') AS EVL_SCORE
		        , A.LECA_CATE 
		        , D.DEP_NM 
		        , C.COL_NM 
		        , A.LECA_YR 
		        , A.LECA_SEM 
		        , (SELECT COUNT(*) FROM EVALUATION WHERE LECA_CD = #{lecaCd}) AS COUNT
		        , V.EVL_ETC
		FROM  COLLEGE C, DEPARTMENT D, PROFESSOR P, EMPLOYEE E, SUBJECT U, LECTURE L, LEC_APPLY A, STU_LEC S, EVALUATION V  
		WHERE D.COL_CD = C.COL_CD
		AND D.DEP_CD = P.DEP_CD
		AND P.PRO_NO = E.EMP_NO
		AND U.PRO_NO = P.PRO_NO
		AND L.SUB_CD = U.SUB_CD
		AND L.LECA_CD = A.LECA_CD
		AND L.LECA_CD = S.LECA_CD
		AND S.LECA_CD = V.LECA_CD
		AND V.STU_NO = S.STU_NO
		AND L.LECA_CD = #{lecaCd}
	</select>
	
	<resultMap type="evaluation" id="evlMap">
		<result property="lecaCd" column="LECA_CD" />
		<result property="lecHcnt" column="LEC_HCNT" />
		<result property="lecaNm" column="LECA_NM" />
		<result property="proNo" column="PRO_NO" />
		<result property="empNm" column="EMP_NM" />
		<result property="evlScore" column="EVL_SCORE" />
		<result property="lecaCate" column="LECA_CATE" />
		<result property="depNm" column="DEP_NM" />
		<result property="colNm" column="COL_NM" />
		<result property="lecaYr" column="LECA_YR" />
		<result property="lecaSem" column="LECA_SEM" />
		<result property="count" column="COUNT" />
		<collection property="evlEtcList" resultMap="etcMap" />
	</resultMap>
	
	<resultMap type="String" id="etcMap">
		<result column="EVL_ETC"/>
	</resultMap>
	
	<select id="mineEvlList" parameterType="String" resultType="evaluation"> 
		SELECT   L.LECA_CD
		        , L.LEC_HCNT 
		        , A.LECA_NM 
		        , A.PRO_NO 
		        , E.EMP_NM 
		        , TO_CHAR(AVG(V.EVL_SCORE),'0.0') AS EVL_SCORE
		        , A.LECA_CATE 
		        , D.DEP_NM 
		        , C.COL_NM 
		        , A.LECA_YR 
		        , A.LECA_SEM 
		FROM  COLLEGE C, DEPARTMENT D, PROFESSOR P, EMPLOYEE E, SUBJECT U, LECTURE L, LEC_APPLY A, STU_LEC S, EVALUATION V  
		WHERE D.COL_CD = C.COL_CD
		AND D.DEP_CD = P.DEP_CD
		AND P.PRO_NO = E.EMP_NO
		AND U.PRO_NO = P.PRO_NO
		AND L.SUB_CD = U.SUB_CD
		AND L.LECA_CD = A.LECA_CD
		AND L.LECA_CD = S.LECA_CD
		AND S.LECA_CD = V.LECA_CD
		AND V.STU_NO = S.STU_NO
		AND A.PRO_NO = 1
		GROUP BY  L.LECA_CD 
		        , L.LEC_HCNT 
		        , A.LECA_NM 
		        , A.PRO_NO 
		        , E.EMP_NM 
		        , A.LECA_CATE 
		        , D.DEP_NM 
		        , C.COL_NM 
		        , A.LECA_YR 
		        , A.LECA_SEM
	</select>
	
	<select id="stuPaging" resultType="int">
		SELECT COUNT(*) FROM STUDENT
	</select>
	
	<select id="empPaging" resultType="int">
		SELECT COUNT(*) FROM EMPLOYEE
	</select>
	
</mapper>







